= Acts As Tenant
This gem was born out of the need for a fail-safe and out-of-the-way manner to add multi-tenancy to a Rails app, that integrates seamlessly with Rails.

Acts_As_Tenant adds the ability to scope models to a tenant model, such as an account. Acts_As_Tenant will set the current tenant for you and ensures all 'tenant models' are always properly scoped to the current tenant: when viewing, searching and creating.

In addition, Acts_As_Tenant:
* sets the current tenant using the subdomain or allows you to pass in the current tenant yourself
* ensures scoping even in unusual usage cases, such as parameter manipulation
* adds support for multi-tenancy to Rails' uniqueness validator, validates_uniqueness_of
* sets up a helper method containing the current tenant

== Installation
Acts_As_Tenant is tested on Rails 3.x.

To use it, add it to your Gemfile:
  
  gem 'acts_as_tenant'

== Getting started
=== Setting the current tenant
  class ApplicationController < ActionController::Base
    set_current_tenant_by_subdomain(:account)
  end
This tells Acts_As_Tenant to use the current subdomain to identify the current tenant. In addition, it tells Acts_As_Tenant that tenants are represented by the Account model.
  
=== Scoping models
  create_table "projects", :force => true do |t|
    t.integer  "account_id"      # foreign_key referencing the tenant model
    t.string   "name"
  end
  
  class Project < ActiveRecord::Base
    acts_as_tenant
  end
  
Acts_As_Tenant requires each scoped model to have a column in its db schema identifying its tenant. Adding acts_as_tenant to your model declaration will scope that model to the current tenant **if a current tenant has been set**.
  Acts_As_Tenant.current_tenant = Account.find(3)   
  
  # New objects are scoped to the current tenant
  @project = Project.new(:name => 'big project')    # => <#Project id: nil, name: 'big project', :account_id: 3>
  
  # It will not allow the creation of scoped objects 
  # linked to other than the current tenant
  @project.account_id = 2
  @project.save                                     # => false 
  
  
  



=== Configuring Application Controller


=== Configuring Models
* validates uniqueness of limitation

=== To Do
* validates :uniqueness =>

=== Bug reports & suggested improvements


=== Maintained by

=== Credits
This gem is used the Multitenant gem by Ryan Sonnek as a starting point and some of his code to set the default_scope is reused.

== License
Copyright (c) 2011 Erwin Matthijssen, released under the MIT license
